退汇背景：
	中信清分跨行转账，钱-》央行 ， 央行-》收款行 ， 第二步可能发生账户问题（账户冻结等），产生退汇

退汇管理单独页面（新的表）
 
      存在退汇，退汇状态    ——》    待处理 【人工处理（维护退汇结果）】       ——》      人工处理完成
（定时任务、主动查询）								

						                 【重新清分】——》处理中   ——》处理完成
						    			                		 ——》处理失败
						    			  
页面：待处理、处理中、处理完成、处理失败、人工处理记录		


批量处理：
		异步调用中信银行接口== ”异步“交给基础层做还是应用层做？
		”退汇“处理 跟执行清分同样逻辑么？但是在原来的借据之外再搞一套数据存储？
									在已清分的情况下，原本的清分是执行不下去的		    
									
									
									
									
退汇处理属于特殊情况：不属于还款这种频繁场景、且没有执行异常的界面展示 采用redis记录提交流水，消费即删除，服务异常失败需要业务人员重新提交执行			 
	请求到来——》记录 操作人——时间戳:云信编号 到redis，唤醒消费线程，返回成功
	
	消费线程：
		     循环从redis拉取数据，执行退汇
		     无数据，线程睡眠   
		     
		     消费失败怎么办？
		     			1.不考虑此情况，交由业务人员重新提交
		     			
退汇处理校验：
工作日
工作时间	     
是否需要查询核心（考虑）
付款账户校验	
接收方账户：（账户变化不受我们清分状态影响）
	融资：根据子云信编号查融资项目，还款户id  查账户中心
	跨行再保理：    查abs账户
	质押：         云信支付查询账户
	一般持有       查帐户中心  一般户、资金分簿，
				重新清分特有逻辑：云信负债池锁定状态同执行清分时，没有从核心获取最新情况 （退汇保持一致）
				
				
1.退汇产生的原因有什么？
2.待处理列表有说是账户问题，在点击“退汇处理”之前会变更账户么？（比如：融资情况下，更改投资方案里面的还款户）

t_rc_submit_record
	id
	request_no                      --流水号
	scene                           --场景
	deal_status                     --处理状态
	submit_num                      --提交数量
	fail_num                        --失败数量
	complete_time                   --完成时间
	oper_name                       --创建人
	
t_rc_submit_details
	id                                
	submit_record_id                -- 提交记录表id
	business_id                     -- 业务id
	business_id_type                -- 业务类型 标识业务id针对什么id
	deal_status                     -- 处理状态
		
		     				        		 